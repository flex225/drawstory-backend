// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String?
  provider  String?
  providerId String?
  projects  Project[]
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("users")
  @@index([email])
}

model Project {
  id String @id @default(uuid())
  title String @db.VarChar(255)
  imageUrl String @db.VarChar(2048)
  author User @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId String
  isDeleted Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  comments Comment[]
  scenes Scene[]

  @@map("projects")
  @@index([authorId])
  @@index([createdAt])
}

model Comment {
  id String @id @default(uuid())
  text String @db.VarChar(255)
  author User @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId String
  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String
  createdAt DateTime @default(now())

  @@map("comments")
  @@index([authorId]) 
  @@index([projectId])
}

model Scene {
  id String @id @default(uuid())
  description String @db.VarChar(2048)
  voiceOver String @db.VarChar(2048)
  imageUrl String @db.VarChar(2048)
  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String
  isDeleted Boolean  @default(false)
  indexInProject Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("scenes")
  @@index([projectId])
}
