name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -tt ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            echo "=== Step 1: Checking for NVM ==="
            if ! command -v nvm &> /dev/null; then
              echo "NVM not found. Installing..."
              curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
              export NVM_DIR="$HOME/.nvm"
              [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            else
              echo "NVM is already installed."
            fi

            echo "=== Step 2: Loading NVM and Setting Node.js Version ==="
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

            REQUIRED_NODE_VERSION=${{ secrets.NODE_VERSION }}
            CURRENT_NODE_VERSION=$(node -v | grep -oP '\d+' | head -1)

            if [ "$CURRENT_NODE_VERSION" != "$REQUIRED_NODE_VERSION" ]; then
              echo "Node.js version $REQUIRED_NODE_VERSION is not installed. Installing..."
              nvm install $REQUIRED_NODE_VERSION
            else
              echo "Node.js version $REQUIRED_NODE_VERSION is already installed."
            fi

            nvm use $REQUIRED_NODE_VERSION

            echo "=== Step 3: Checking for PM2 ==="
            if ! command -v pm2 &> /dev/null; then
              echo "PM2 not found. Installing..."
              npm install -g pm2
            else
              echo "PM2 is already installed."
            fi

            echo "=== Step 4: Stopping PM2 Instance ==="
            cd ~/apps
            pm2 stop ecosystem.config.js || true

            echo "=== Step 5: Navigating to Project Directory ==="
            cd ~/apps/drawstory-backend

            echo "=== Step 6: Pulling Latest Changes ==="
            git pull origin master

            echo "=== Step 7: Installing Dependencies ==="
            npm install

            echo "=== Step 8: Starting Docker Compose Services ==="
            docker-compose up -d

            echo "=== Step 9: Running Prisma Migrations ==="
            npx prisma migrate deploy

            echo "=== Step 10: Building the Project ==="
            npm run build

            echo "=== Step 11: Starting PM2 Instance ==="
            pm2 start ecosystem.config.js

            echo "=== Step 12: Saving PM2 Process List ==="
            pm2 save
          EOF
